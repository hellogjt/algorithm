#include <stdio.h>

/*8 queen */
#define N 8
int col[N + 1];

int check(int row,int line)
{
	int i;
	for (i = 1; i <row; i++){
		if (line == col[i] || row - i == line - col[i] || row - i == col[i] - line){
			return 1;
		}
	}
	return 0;//exist-1
}

int queen(int total)
{
	int i, j,k;
	for (i = 0; i <= total; i++){
		col[i] = 1;
	}

	for (i = 1; i <= total; i++){//row
		j= col[i];
		while (total >= j && 1 == check(i, j)){//col, conflict
				j++;
			}
		if (total<j){//exceed, special case
			col[i] = 1;
				k = i - 1; //back up row
				if (1 > k){
					printf("no exist.");
					return -1;
				}
				col[k]++;

				while (total<col[k]){
					col[k] = 1;
					k--;
					if (1 > k){
						printf("no exist.");
						return -1;
					}
					col[k]++;
				}

				i = k - 1;
				continue;
			}//exceed
		
			//find j
			col[i] = j;
	}
	return 0;
}

int main(void)
{
	int test_case;
	int T;
	 freopen("sample_input.txt", "r", stdin);
	setbuf(stdout, NULL);
	scanf("%d", &T);

	for (test_case = 1; test_case <= T; ++test_case)
	{
		int n=8;
		queen(N);
	}//test case
	return 0; //Your program should return 0 on normal termination.
}
